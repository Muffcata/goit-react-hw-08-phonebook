{"version":3,"file":"static/js/213.b2f64591.chunk.js","mappings":"sOAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,EAEvBC,EAAc,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAEnBC,EAAe,SAAAN,GAAK,OAAIA,EAAMO,OAAOA,MAAjB,ECLjC,EAA+B,kCAA/B,EAA8E,gCAA9E,EAA6H,kCAA7H,EAAuK,2BAAvK,EAA2M,4B,SCyD3M,EApDoB,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXR,GAAWS,EAAAA,EAAAA,IAAYX,GAiB7B,OACE,gBAAKY,UAAWC,EAAhB,UACE,kBAAMC,SAjBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAOJ,EAAEG,OAAOE,SAASD,KAAKE,MAC9BC,EAAQP,EAAEG,OAAOE,SAASE,MAAMD,MAGtC,GAFqBnB,EAASqB,MAAK,SAAAC,GAAO,OAAIA,EAAQL,OAASA,CAArB,IAGxC,OAAOM,MAAMN,EAAO,2BAEpBV,GAASiB,EAAAA,EAAAA,IAAW,CAAEP,KAAMA,EAAMG,MAAOA,KAE3CL,EAAKU,OACN,EAIG,WACE,mBAAOf,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXe,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOnB,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXe,KAAK,MACLT,KAAK,QACLU,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQnB,UAAWC,EAAce,KAAK,SAAtC,gCAOT,ECvDD,EAA0B,0BAA1B,EAA2D,uBAA3D,EAA2F,yBAA3F,EAA2H,uBAA3H,EAAyJ,uBCK5II,EAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAId,EAAkB,EAAlBA,KAAMG,EAAY,EAAZA,MAC7Bb,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIE,UAAWC,EAAf,UACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,mBAA8BM,EAA9B,aAAuCG,MACvC,mBACEV,UAAWC,EACXe,KAAK,SACLM,QAAS,kBAAMzB,GAAS0B,EAAAA,EAAAA,IAAcF,GAA7B,EAHX,wBAH4BA,EAanC,ECID,EArBoB,WAClB,IAAM/B,GAAWS,EAAAA,EAAAA,IAAYX,GACvBoC,GAAWzB,EAAAA,EAAAA,IAAYJ,GACvB8B,EAAmBnC,EAASM,QAAO,SAAAgB,GAAO,OAC9CA,EAAQL,KAAKmB,WAAWC,cAAcC,SAASJ,EADD,IAIhD,OACE,eAAIxB,UAAWC,EAAf,SACGwB,EAAiBI,KAAI,SAAAjB,GAAO,OAC3B,SAACQ,EAAD,CAEEC,GAAIT,EAAQS,GACZd,KAAMK,EAAQL,KACdG,MAAOE,EAAQF,OAHVE,EAAQS,GAFY,KAUlC,ECxBD,EAA0B,wBAA1B,EAA0D,sBAA1D,EAAwF,sB,UC4BxF,EAvBe,WACb,IAAMxB,GAAWC,EAAAA,EAAAA,MACXF,GAASG,EAAAA,EAAAA,IAAYJ,GAK3B,OACE,gBAAKK,UAAWC,EAAhB,UACE,mBAAOD,UAAWC,EAAlB,oCAEE,kBACED,UAAWC,EACX6B,SATc,SAAA3B,GACpBN,GAASkC,EAAAA,EAAAA,GAAkB5B,EAAEG,OAAOG,OACrC,EAQOA,MAAOb,EACPoB,KAAK,OACLT,KAAK,eAKd,EClBYyB,EAAe,WAC1B,IAAMnC,GAAWC,EAAAA,EAAAA,MACXN,GAAYO,EAAAA,EAAAA,IAAYR,GACxBG,GAAQK,EAAAA,EAAAA,IAAYN,GAK1B,OAHAwC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,KAEF,4BACE,uCACA,SAAC,EAAD,KACA,uCACA,SAAC,EAAD,IACCL,IAAcE,IAAS,mDACxB,SAAC,EAAD,MAGL,EAED,G","sources":["redux/tasks/selectors.js","webpack://react-homework/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","components/ContactList/ContactList.jsx","webpack://react-homework/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_wrapper\":\"ContactForm_form_wrapper__1KVa-\",\"input_name\":\"ContactForm_input_name__dBk50\",\"input_number\":\"ContactForm_input_number__KJTUp\",\"label\":\"ContactForm_label__-cVXI\",\"button\":\"ContactForm_button__eSwX9\"};","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { addContact } from 'redux/tasks/operations';\nimport style from './ContactForm.module.css';\nimport { selectContacts } from 'redux/tasks/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const phone = e.target.elements.phone.value;\n    const foundContant = contacts.find(contact => contact.name === name);\n\n    if (foundContant) {\n      return alert(name + 'is already in contacts.');\n    } else {\n      dispatch(addContact({ name: name, phone: phone }));\n    }\n    form.reset();\n  };\n\n  return (\n    <div className={style.form_wrapper}>\n      <form onSubmit={handleSubmit}>\n        <label className={style.label}>\n          Name\n          <input\n            className={style.input_name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={style.label}>\n          Number\n          <input\n            className={style.input_number}\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <button className={style.button} type=\"submit\">\n            Add Contact\n          </button>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Contacts_wrapper__g0qS5\",\"list\":\"Contacts_list__R3QeP\",\"button\":\"Contacts_button__vUlqW\",\"text\":\"Contacts_text__Cijp1\",\"name\":\"Contacts_name__04pGf\"};","import { React } from 'react';\n\nimport style from '../Contacts/Contacts.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/tasks/operations';\n\nexport const Contacts = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={style.list} key={id}>\n      <div className={style.text}>\n        <p className={style.name}>{`${name}: ${phone}`}</p>\n        <button\n          className={style.button}\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { selectContacts, selectFilter } from 'redux/tasks/selectors';\nimport { useSelector } from 'react-redux';\nimport style from 'components/Contacts/Contacts.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterSt = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toString().toLowerCase().includes(filterSt)\n  );\n\n  return (\n    <ul className={style.wrapper}>\n      {filteredContacts.map(contact => (\n        <Contacts\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          phone={contact.phone}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { React } from 'react';\nimport style from '../Filter/Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from 'redux/tasks/filterSlice';\nimport { selectFilter } from 'redux/tasks/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterHandler = e => {\n    dispatch(setContactsFilter(e.target.value));\n  };\n  return (\n    <div className={style.wrapper}>\n      <label className={style.label}>\n        Find contacts by name:\n        <input\n          className={style.input}\n          onChange={filterHandler}\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/tasks/operations';\nimport { selectIsLoading, selectError } from 'redux/tasks/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts:</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useSelector","className","style","onSubmit","e","preventDefault","form","target","name","elements","value","phone","find","contact","alert","addContact","reset","type","pattern","title","required","Contacts","id","onClick","deleteContact","filterSt","filteredContacts","toString","toLowerCase","includes","map","onChange","setContactsFilter","ContactsPage","useEffect","fetchContacts"],"sourceRoot":""}