{"version":3,"file":"static/js/685.da0e71ac.chunk.js","mappings":"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","sources":["redux/tasks/selectors.js","components/ContactForm/ContactForm.jsx","components/Contacts/Contacts.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { addContact } from 'redux/tasks/operations';\nimport { selectContacts } from 'redux/tasks/selectors';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = e.target.elements.name.value;\n    const number = e.target.elements.number.value;\n    const foundContant = contacts.find(contact => contact.name === name);\n\n    if (foundContant) {\n      return alert(name + 'is already in contacts.');\n    } else {\n      dispatch(addContact({ name: name, number: number }));\n    }\n    form.reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n        <TextField\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          name=\"name\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Name\"\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <TextField\n          type=\"tel\"\n          placeholder=\"Enter contact number\"\n          fullWidth\n          margin=\"normal\"\n          label=\"Number\"\n          autoComplete=\"off\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button variant=\"contained\" size=\"medium\" type=\"submit\">\n          Add Contact\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import { React } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/tasks/operations';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\n\nexport const Contacts = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box component=\"form\" noValidate sx={{ mt: 5 }} key={id}>\n        <Typography variant=\"h5\" sx={{ textAlign: 'left' }}>\n          {`${name}: ${number}`}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { selectContacts, selectFilter } from 'redux/tasks/selectors';\nimport { useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterSt = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toString().toLowerCase().includes(filterSt)\n  );\n\n  return (\n    <Box noValidate sx={{ mt: 2 }}>\n      {filteredContacts.map(contact => (\n        <Contacts\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import { React } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from 'redux/tasks/filterSlice';\nimport { selectFilter } from 'redux/tasks/selectors';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const filterHandler = e => {\n    dispatch(setContactsFilter(e.target.value));\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box component=\"form\" noValidate sx={{ mt: 8 }}>\n        <Typography variant=\"h5\" sx={{ textAlign: 'left' }}>\n          Contacts finder\n        </Typography>\n\n        <TextField\n          onChange={filterHandler}\n          value={filter}\n          fullWidth\n          margin=\"normal\"\n          placeholder=\"Enter contact\"\n          label=\"Search by name:\"\n          type=\"text\"\n          name=\"filter\"\n        ></TextField>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { MagnifyingGlass } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <MagnifyingGlass\n    visible={true}\n    height=\"80\"\n    width=\"80\"\n    ariaLabel=\"MagnifyingGlass-loading\"\n    wrapperStyle={{\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      margin: '0 auto',\n      position: 'fixed',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      zIndex: '9999',\n    }}\n    wrapperClass=\"MagnifyingGlass-wrapper\"\n    glassColor=\"#c0efff\"\n    color=\"#e15b64\"\n  />\n);\n\nexport default Loader;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/tasks/operations';\nimport { selectIsLoading, selectError } from 'redux/tasks/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Icon from 'images/685cceffa93afa89416c4345481bf834.png';\nimport Typography from '@mui/material/Typography';\nimport Loader from 'components/Loader/Loader';\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Typography variant=\"h5\" align=\"center\" mb={6}>\n        <img src={Icon} alt=\"phonebook icon\" width=\"130\" height=\"130\" />\n        <p>Add your contacts</p>\n      </Typography>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n\n      {isLoading && !error && <Loader />}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useSelector","Container","component","maxWidth","Box","onSubmit","e","preventDefault","form","target","name","elements","value","number","find","contact","alert","addContact","reset","noValidate","sx","mt","TextField","type","placeholder","fullWidth","margin","label","autoComplete","pattern","title","required","Button","variant","size","Contacts","id","Typography","textAlign","onClick","deleteContact","filterSt","filteredContacts","toString","toLowerCase","includes","map","onChange","setContactsFilter","visible","height","width","ariaLabel","wrapperStyle","display","justifyContent","alignItems","position","top","left","right","bottom","zIndex","wrapperClass","glassColor","color","ContactsPage","useEffect","fetchContacts","align","mb","src","Icon","alt"],"sourceRoot":""}